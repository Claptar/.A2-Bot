import os
import random
import telebot
from telebot.types import Message
from telebot import types
import pandas as pd
import numpy as np
import math_part


base_url = 'https://api.telegram.org/bot838117295:AAGUldfunZu6Cyx-kJkCucQuH3pCLBD4Jcg/'
TOKEN = '838117295:AAGUldfunZu6Cyx-kJkCucQuH3pCLBD4Jcg'
PATH = os.path.abspath('')
bot = telebot.TeleBot(TOKEN)
MESSAGE_NUM = 0
MESSAGE_COM = ''
Q_NUM = 0


@bot.message_handler(commands=['help'])
def help_def(message):
    bot.send_message(message.chat.id, '–°–µ–π—á–∞—Å —è —Ä–∞—Å—Å–∫–∞–∂—É —á–µ–º —è –º–æ–≥—É —Ç–µ–±–µ –ø–æ–º–æ—á—å ‚ò∫Ô∏è\n'
                                      '/figure - –•–æ—á–µ—à—å –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫ –ø–æ —Ç–æ—á–∫–∞–º ? –ù–µ –≤–æ–ø—Ä–æ—Å !\n'
                                      '/figure_mnk - –•–æ—á–µ—à—å –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫ –ª–∏–Ω–µ–∞—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –ø–æ –º–Ω–∫ ? –ó–∞–ø—Ä–æ—Å—Ç–æ !\n'
                                      '/mnk_constants - –ù—É–∂–Ω–æ –ø–æ—Å—á–∏—Ç–∞—Ç—å –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã –ø—Ä—è–º–æ–π –ø–æ –º–Ω–∫ ? –Ø –ø–æ–º–æ–≥—É !\n'
                                      '/schedule - –ó–∞–±—ã–ª —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ ?) –ë—ã–≤–∞–µ—Ç, –ø–∏—à–∏, —è –ø–æ–º–æ–≥—É üòâüì±üì±üì±'
                                      '\n/exam - –ü–æ–¥—Å–∫–∞–∂—É —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —ç–∫–∑–∞–º–µ–Ω–æ, –Ω–æ —Ç—ã —Å–∞–º –∑–∞—Ö–æ—Ç–µ–ª...'
                                      ' –Ø –Ω–µ –ª—é–±–ª—é –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å'
                                      '–æ –ø–ª–æ—Ö–æ–º...\n'
                                      '/flash_cards - –î–∞–≤–∞–π —Å—ã–≥—Ä–∞–µ–º –≤ –∏–≥—Ä—É... –Ø —Ç–µ–±–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ/—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫—É, –∞ —Ç—ã –º–Ω–µ'
                                      '"–∑–Ω–∞—é/–Ω–µ –∑–Ω–∞—é.')


@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç-–ø—Ä–∏–≤–µ—Ç üôÉ –Ø –æ—á–µ–Ω—å –ª—é–±–ª—é –ø–æ–º–æ–≥–∞—Ç—å –ª—é–¥—è–º,'
                                      ' –Ω–∞–ø–∏—à–∏ /help —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, —á—Ç–æ —è —É–º–µ—é. ')


@bot.message_handler(commands=['flash_cards'])
def start(message):
    bot.send_message(message.chat.id, '–•–æ—á–µ—à—å –≤—Å–ø–æ–º–Ω–∏—Ç—å –ø–∞—Ä–æ—á–∫—É –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–π ?)üìöüìö')
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(*[types.KeyboardButton(name) for name in ['–ú–∞—Ç–∞–Ω']])
    msg = bot.send_message(message.chat.id, '–°–ø–µ—Ä–≤–∞ –≤—ã–±–µ—Ä–∏ –ø—Ä–µ–¥–º–µ—Ç', reply_markup=keyboard)
    bot.register_next_step_handler(msg, subject)


def subject(message):
    global Q_NUM, PATH
    if (message.text == '–ú–∞—Ç–∞–Ω') or (message.text == '–ï—â—ë'):
        Q_NUM = random.randint(0, 13)
        questions = pd.read_excel(f'{PATH}/flash_cards/math/flash_data.xlsx', header=None)
        d = np.array(questions)
        question = d[Q_NUM, 0]
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(*[types.KeyboardButton(name) for name in ['–ü–æ–∫–∞–∂–∏']])
        msg = bot.send_message(message.chat.id, question, reply_markup=keyboard)
        bot.register_next_step_handler(msg, answer)
    if message.text == '–í—Å—ë, —Ö–≤–∞—Ç–∏—Ç':
        keyboard = types.ReplyKeyboardRemove()
        bot.send_message(message.chat.id, '–í–æ–∑–≤—Ä–∞—â–∞–π—Å—è –µ—â—ë !', reply_markup=keyboard)


def answer(message):
    global Q_NUM
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(*[types.KeyboardButton(name) for name in ['–ï—â—ë', '–í—Å—ë, —Ö–≤–∞—Ç–∏—Ç']])
    bot.send_message(message.chat.id, '–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:')
    with open(f'{PATH}/flash_cards/math/{Q_NUM + 1}.png', 'rb') as photo:
        msg = bot.send_photo(message.chat.id, photo, reply_markup=keyboard)
    bot.register_next_step_handler(msg, subject)


@bot.message_handler(commands=['figure_mnk'])
def figure_mnk(message):
    global MESSAGE_COM
    bot.send_message(message.chat.id, '–°–Ω–æ–≤–∞ –ª–∞–±–∫–∏ –¥–µ–ª–∞–µ—à—å ?) –û—Ö —É–∂ —ç—Ç–∏ –ª–∏–Ω–µ–∞—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –≥—Ä–∞—Ñ–∏–∫–∏ !...'
                                      ' –°–µ–π—á–∞—Å –±—ã—Å—Ç—Ä–µ–Ω—å–∫–æ –≤—Å—ë –ø–æ—Å—Ç—Ä–æ—é, —Ç–æ–ª—å–∫–æ —Ç–µ–±–µ –ø—Ä–∏–¥—ë—Ç—Å—è –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –ø–∞—Ä—É –≤–æ–ø—Ä–æ—Å–æ–≤'
                                      'üòâ. –ò –Ω–µ –∑–∞—Å–∏–∂–∏–≤–∞–π—Å—è, –ª–æ–∂–∏—Å—å —Å–ø–∞—Ç—å))')
    msg = bot.send_message(message.chat.id, '–°–∫–∞–∂–∏, –∫–∞–∫ –º–Ω–µ –ø–æ–¥–ø–∏—Å–∞—Ç—å –æ—Å—å —Ö ?')
    MESSAGE_COM = 'figure_mnk'
    bot.register_next_step_handler(msg, ax_x)


@bot.message_handler(commands=['mnk_constants'])
def mnk_constants(message):
    global MESSAGE_COM
    msg = bot.send_message(message.chat.id, '–•–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã –ø—Ä—è–º—ã—Ö –ø–æ –ú–ù–ö ?)'
                                            ' –î–∞–∞, –Ω–µ–ø—Ä–æ—Å—Ç–∞—è –∑–∞–¥–∞—á–∞, —Ç–∞–∫ –∏ –±—ã—Ç—å,'
                                      '–ø–æ–º–æ–≥—É —Ç–µ–±–µ ! ')
    MESSAGE_COM = 'mnk_constants'
    bot.register_next_step_handler(msg, tit)


@bot.message_handler(commands=['figure'])
def figure(message):
    global MESSAGE_COM
    MESSAGE_COM = 'figure'
    bot.send_message(message.chat.id, '–û–π, –∞ —á—Ç–æ —ç—Ç–æ —É —Ç–µ–±—è –∑–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å —Ç–∞–∫–∞—è?) –ú–Ω–µ –¥–∞–∂–µ —Å–∞–º–æ–º—É –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ —Å—Ç–∞–ª–æ.'
                                      ' –°–µ–π—á–∞—Å –±—ã—Å—Ç—Ä–µ–Ω—å–∫–æ –≤—Å—ë –ø–æ—Å—Ç—Ä–æ—é, —Ç–æ–ª—å–∫–æ —Ç–µ–±–µ –ø—Ä–∏–¥—ë—Ç—Å—è –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –ø–∞—Ä—É –≤–æ–ø—Ä–æ—Å–æ–≤'
                                      'üòâ))')
    msg = bot.send_message(message.chat.id, '–°–∫–∞–∂–∏, –∫–∞–∫ –º–Ω–µ –ø–æ–¥–ø–∏—Å–∞—Ç—å –æ—Å—å —Ö ?')
    bot.register_next_step_handler(msg, ax_x)


def ax_x(message):
    math_part.LABEL_X = message.text
    msg = bot.send_message(message.chat.id, '–ê, –∫–∞–∫ –º–Ω–µ –ø–æ–¥–ø–∏—Å–∞—Ç—å –æ—Å—å —É ?')
    bot.register_next_step_handler(msg, ax_y)


def ax_y(message):
    math_part.LABEL_Y = message.text
    msg = bot.send_message(message.chat.id, '–°–∞–º–æ–µ –≥–ª–∞–≤–Ω–æ–µ: –∫–∞–∫ –º–Ω–µ –Ω–∞–∑–≤–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫ ?')
    bot.register_next_step_handler(msg, tit)


def tit(message):
    if message.text == '–í–∏–¥–∏–º–æ –Ω–µ –≤ —ç—Ç–æ—Ç —Ä–∞–∑ ...':
        keyboard = types.ReplyKeyboardRemove()
        bot.send_message(message.chat.id, '–ù—É –ª–∞–¥–Ω–æ... üò•', reply_markup=keyboard)
    else:
        if message.text == '–ü–æ–ø—Ä–æ–±—É—é –µ—â—ë —Ä–∞–∑':
            keyboard = types.ReplyKeyboardRemove()
            bot.send_message(message.chat.id, '–î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º –µ—â—ë —Ä–∞–∑üòî', reply_markup=keyboard)
        math_part.TITLE = message.text
        bot.send_message(message.chat.id, '–ü—Ä–∏—à–ª–∏ –º–Ω–µ —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏ –≤–æ—Ç –≤ —Ç–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ –∏ –≤—Å—ë –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–æüòä')
        with open('example.jpg', 'rb') as photo:
            msg = bot.send_photo(message.chat.id, photo)
        bot.register_next_step_handler(msg, date_mnk)


def date_mnk(message):
    try:
        global MESSAGE_COM
        file_id = message.json.get('document').get('file_id')
        file_path = bot.get_file(file_id).file_path
        downloaded_file = bot.download_file(file_path)
        src = message.document.file_name
        with open(src, 'wb') as new_file:
            new_file.write(downloaded_file)
        a, b, d_a, d_b = math_part.mnk_calc(src)

        if MESSAGE_COM == 'figure_mnk':

            math_part.plots_drawer(src, math_part.LABEL_X, math_part.LABEL_Y, math_part.TITLE)

            with open('plot.png', 'rb') as photo:
                bot.send_photo(message.chat.id, photo)

            for i in range(0, len(a)):
                bot.send_message(message.chat.id, f'–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã {i + 1}-–æ–π –ø—Ä—è–º–æ–π:\n'
                f' a = {round(a[i], 3)} +- {round(d_a[i], 3)}\n'
                f' b = {round(b[i], 3)} +- {round(d_b[i], 3)}')
            os.remove('plot.png')

        elif MESSAGE_COM == 'figure':

            math_part.plot_drawer(src, math_part.LABEL_X, math_part.LABEL_Y, math_part.TITLE)

            with open('plot.png', 'rb') as photo:

                bot.send_photo(message.chat.id, photo)

            os.remove('plot.png')

        elif MESSAGE_COM == 'mnk_constants':

            for i in range(0, len(a)):
                bot.send_message(message.chat.id, f'–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã {i + 1}-–æ–π –ø—Ä—è–º–æ–π:\n'
                f' a = {round(a[i], 3)} +- {round(d_a[i], 3)}\n'
                f' b = {round(b[i], 3)} +- {round(d_b[i], 3)}')
        os.remove(src)
        math_part.TITLE = ''
        math_part.LABEL_Y = ''
        math_part.LABEL_X = ''
    except Exception as e:
        print(e)
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(*[types.KeyboardButton(name) for name in ['–ü–æ–ø—Ä–æ–±—É—é –µ—â—ë —Ä–∞–∑', '–í–∏–¥–∏–º–æ –Ω–µ –≤ —ç—Ç–æ—Ç —Ä–∞–∑ ...']])
        msg = bot.send_message(message.chat.id,
                               '–ß—Ç–æ-—Ç–æ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å... –ü—Ä–æ–≤–µ—Ä—å —Ñ–∞–π–ª –∫–æ—Ç–æ—Ä—ã–π —Ç—ã –ø—Ä–∏—Å–ª–∞–ªüò® ', reply_markup=keyboard)
        bot.register_next_step_handler(msg, tit)


@bot.message_handler(commands=['schedule'])
def schedule(message):
    bot.send_message(message.chat.id, '–°–Ω–æ–≤–∞ –Ω–µ –º–æ–∂–µ—à—å –≤—Å–ø–æ–º–Ω–∏—Ç—å –Ω–æ–º–µ—Ä –∫–∞–±–∏–Ω–µ—Ç–∞ –∏–ª–∏ –∫–∞–∫–∞—è —Å–ª–µ–¥—É—é—â–∞—è –ø–∞—Ä–∞ ?)'
                                      '–ù–∏—á–µ–≥–æ, —è —É–∂–µ —Ç—É—Ç !')
    with open('schedule.jpg', 'rb') as photo:
        bot.send_photo(message.chat.id, photo)


@bot.message_handler(commands=['exam'])
def exam(message):
    bot.send_message(message.chat.id, '–ù—É... –¢—ã —ç—Ç–æ.. –î–µ—Ä–∂–∏—Å—å... !')
    with open('exam.png', 'rb') as photo:
        bot.send_photo(message.chat.id, photo)


bot.polling()
