import logging
from aiogram import Bot, Dispatcher, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.types import ParseMode
from aiogram.utils import executor
from data_constructor import psg
from math_module import math_part
from koryavov import kor

logging.basicConfig(level=logging.INFO)

API_TOKEN = '893576564:AAHxlCPFCfcewfz2_0rlygYfJzCbhz4HYJs'

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)


class Form(StatesGroup):
    course = State()  # Will be represented in storage as 'Form:course'
    group = State()  # Will be represented in storage as 'Form:group'


@dp.message_handler(commands=['help'])
async def help_def(message):
    """
    –§—É–Ω–∫—Ü–∏—è –ª–æ–≤–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–º–∞–Ω–¥–æ–π '/help' –∏ –ø—Ä–∏—Å—ã–ª–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–º–∞–Ω–¥ –±–æ—Ç–∞
    :param message: telebot.types.Message
    :return:
    """
    with open('txt_files/help.txt', encoding='utf-8', mode='r') as f:
        text = f.read()
    await bot.send_message(message.chat.id, text)


@dp.message_handler(commands='start')
async def cmd_start(message: types.Message):
    """
    Conversation's entry point
    """
    # Set state
    await Form.course.set()
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(*[types.KeyboardButton(str(name)) for name in range(1, 6)])  # –∫–Ω–æ–ø–∫–∏ c –Ω–æ–º–µ—Ä–∞–º–∏ –∫—É—Ä—Å–æ–≤
    await bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç-–ø—Ä–∏–≤–µ—Ç üôÉ –î–∞–≤–∞–π –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è! –ú–µ–Ω—è –∑–æ–≤—É—Ç A2.'
                                            ' –ú–æ–∂–µ—à—å —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –º–Ω–µ –Ω–µ–º–Ω–æ–≥–æ –æ —Å–µ–±–µ,'
                                            ' —á—Ç–æ–±—ã —è –∑–Ω–∞–ª, –∫–∞–∫ –º–æ–≥—É —Ç–µ–±–µ –ø–æ–º–æ—á—å?'
                                            ' –î–ª—è –Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ –Ω–æ–º–µ—Ä —Å–≤–æ–µ–≥–æ –∫—É—Ä—Å–∞.', reply_markup=keyboard)


# Check course number. Age gotta be digit from 1 to 4
@dp.message_handler(lambda message: not message.text.isdigit() or not 1 < int(message.text) < 5, state=Form.course)
async def process_age_invalid(message: types.Message):
    """
    –ï—Å–ª–∏ –Ω–æ–º–µ—Ä –∫—É—Ä—Å–∞ –≤–≤–µ–¥–µ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
    """
    return await message.reply("–í—ã–±–µ—Ä–∏ –Ω–æ–º–µ—Ä –∫—É—Ä—Å–∞ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞)")


@dp.message_handler(lambda message: message.text.isdigit(), state=Form.course)
async def process_name(message: types.Message):
    """
    –ó–∞–ø–∏—Å—å –Ω–æ–º–µ—Ä–∞ –∫—É—Ä—Å–∞
    """
    await psg.insert_data(message.chat.id, '–ë00-228', message.text)
    await Form.next()
    keyboard = types.ReplyKeyboardRemove()
    await bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, –∞ —Ç–µ–ø–µ—Ä—å –Ω–µ –ø–æ–¥—Å–∫–∞–∂–µ—à—å –Ω–æ–º–µ—Ä —Å–≤–æ–µ–π –≥—Ä—É–ø–ø—ã?\n'
                                            '(–í —Ñ–æ—Ä–º–∞—Ç–µ –ë00‚Äì228 –∏–ª–∏ 777, –∫–∞–∫ –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏)', reply_markup=keyboard)


@dp.message_handler(state=Form.group)
async def process_age(message: types.Message):
    await psg.update_group_num(message.chat.id, message.text)
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)  # –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –∏–ª–∏ –∑–∞–≤—Ç—Ä–∞
    keyboard.add(*[types.KeyboardButton(name) for name in ['–ù–∞ —Å–µ–≥–æ–¥–Ω—è', '–ù–∞ –∑–∞–≤—Ç—Ä–∞']])
    await bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, –≤–æ—Ç –º—ã –∏ –ø–æ–∑–Ω–∞–∫–æ–º–∏–ª–∏—Å—å üôÉ –Ø –æ—á–µ–Ω—å –ª—é–±–ª—é –ø–æ–º–æ–≥–∞—Ç—å –ª—é–¥—è–º, –Ω–∞–ø–∏—à–∏ '
                                            '/help —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, —á—Ç–æ —è —É–º–µ—é. ', reply_markup=keyboard)

executor.start_polling(dp, skip_updates=True)
